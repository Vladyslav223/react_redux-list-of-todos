{"version":3,"sources":["store/actions.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoItem/index.js","components/TodoList/TodoList.js","components/App/App.js","components/App/index.js","store/reducer.js","store/store.js","index.js"],"names":["ACTION_TYPES","LOAD","HANDLE_SUCCESS","HANDLE_ERROR","HANDLE_REMOVE","HANDLE_SORT","handleRemove","id","type","payload","User","_ref","user","username","name","phone","website","email","react_default","a","createElement","className","TodoItem","todo","title","completed","onClick","components_User_User","TodoItemWrap","connect","dispatch","TodoList","todos","map","key","App","loadDatas","_this$props","_this","props","startLoading","handleSuccess","handleError","Promise","all","fetch","then","users","json","_ref2","Object","slicedToArray","todosWithUsers","_objectSpread","find","userId","catch","_this$props2","this","isLoading","hasError","disabled","handleSort","Fragment","defaultValue","onChange","e","target","value","hidden","components_TodoList_TodoList","React","Component","defaultProps","AppWrap","state","sortedTodos","initialState","store","createStore","arguments","length","undefined","action","reducer_objectSpread","toConsumableArray","filter","sort","b","localeCompare","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.8955e735.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  LOAD: 'LOAD',\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\n  HANDLE_ERROR: 'HANDLE_ERROR',\n  HANDLE_REMOVE: 'HANDLE_REMOVE',\n  HANDLE_SORT: 'HANDLE_SORT',\n};\n\nconst {\n  LOAD,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n  HANDLE_REMOVE,\n  HANDLE_SORT,\n} = ACTION_TYPES;\n\nexport const startLoading = () => ({ type: LOAD });\nexport const handleSuccess = todosWithUsers => ({\n  type: HANDLE_SUCCESS,\n  todosWithUsers,\n});\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const handleRemove = id => ({\n  type: HANDLE_REMOVE,\n  payload: id,\n});\nexport const handleSort = e => ({\n  type: HANDLE_SORT,\n  payload: e,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nconst User = ({ user }) => {\n  const {\n    username, name, phone, website, email,\n  } = user;\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__username\">\n        {username}\n      </p>\n      <p className=\"user__name\">\n        {name}\n      </p>\n      <p className=\"user__email\">\n        {email}\n      </p>\n      <p className=\"user__phone\">\n        {phone}\n      </p>\n      <p className=\"user__website\">\n        {website}\n      </p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    website: PropTypes.string,\n    phone: PropTypes.string,\n    id: PropTypes.number,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './TodoItem.css';\nimport User from '../User/User';\n\nconst TodoItem = ({ todo, handleRemove }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <div className={completed ? 'todo-item completed' : 'todo-item'}>\n      <p className=\"todo-item__title\">\n        <span className=\"digit\">{id}</span>\n        <button\n          onClick={() => handleRemove(id)}\n          type=\"button\"\n          className=\"remove\"\n        >\n          âœ•\n        </button>\n      </p>\n      <p className=\"todo-item__main-title\">{title}</p>\n      <User user={user} />\n    </div>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.shape({}).isRequired,\n  }).isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import { connect } from 'react-redux';\nimport { handleRemove } from '../../store/actions';\nimport TodoItem from './TodoItem';\n\nconst mapDispatchToProps = dispatch => ({\n  handleRemove: id => dispatch(handleRemove(id)),\n});\n\nconst TodoItemWrap = connect(null, mapDispatchToProps)(TodoItem);\n\nexport {\n  TodoItemWrap as TodoItem,// eslint-disable-line\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from '../TodoItem/index';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"todos-list\">\n    { todos.map(todo => (\n      <TodoItem key={todo.id} todo={todo} />\n    ))}\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport TodoList from '../TodoList/TodoList';\n\nclass App extends React.Component {\n  loadDatas = () => {\n    const {\n      startLoading, handleSuccess, handleError,\n    } = this.props;\n    const usersURL = 'https://jsonplaceholder.typicode.com/users';\n    const todosURL = 'https://jsonplaceholder.typicode.com/todos';\n    startLoading();\n\n    Promise.all([\n      fetch(usersURL)\n        .then(users => users.json()),\n      fetch(todosURL)\n        .then(todos => todos.json()),\n    ])\n      .then(([users, todos]) => {\n        const todosWithUsers = todos.map(todo => ({\n          ...todo,\n          user: users.find(user => user.id === todo.userId),\n        }));\n        handleSuccess(todosWithUsers);\n      })\n      .catch(() => {\n        handleError();\n      });\n  }\n\n  render() {\n    const {\n      todosWithUsers,\n      isLoading,\n      hasError,\n      disabled,\n      handleSort,\n    } = this.props;\n\n    if (isLoading) {\n      return (<p>Loading...</p>);\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Error occured!</p>\n          <button type=\"button\" onClick={this.loadDatas}>Try again</button>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <h1 className=\"h1\">Dynamic list of todos</h1>\n        {!disabled\n          ? (\n            <button\n              onClick={this.loadDatas}\n              className=\"button-start\"\n              type=\"button\"\n            >\n              Load\n            </button>\n          )\n          : (\n            <select\n              defaultValue=\"Sorting\"\n              onChange={(e) => {\n                handleSort(e.target.value);\n              }}\n            >\n              <option value=\"Sorting\" hidden>Sorting</option>\n              <option value=\"By user\">By user</option>\n              <option value=\"By title\">By title</option>\n              <option value=\"By status\">By status</option>\n            </select>\n          )\n        }\n        <TodoList todos={todosWithUsers} />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  handleSuccess: PropTypes.func.isRequired,\n  handleError: PropTypes.func.isRequired,\n  startLoading: PropTypes.func.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  todosWithUsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  hasError: false,\n  isLoading: false,\n  disabled: false,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport {\n  startLoading,\n  handleSuccess,\n  handleError,\n  handleRemove,\n  handleSort,\n} from '../../store/actions';\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n  todosWithUsers: state.todosWithUsers,\n  disabled: state.disabled,\n  sortedTodos: state.sortedTodos,\n});\n\nconst AppWrap = connect(mapStateToProps,\n  {\n    startLoading,\n    handleSuccess,\n    handleError,\n    handleRemove,\n    handleSort,\n  })(App);\n\nexport {\n  AppWrap as App,// eslint-disable-line\n};\n","import { ACTION_TYPES } from './actions';\n\nconst {\n  LOAD,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n  HANDLE_REMOVE,\n  HANDLE_SORT,\n} = ACTION_TYPES;\n\nexport const initialState = {\n  isLoading: false,\n  hasError: false,\n  disabled: false,\n  todosWithUsers: [],\n};\n\nexport const reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todosWithUsers: action.todosWithUsers,\n        isLoading: false,\n        hasError: false,\n        disabled: true,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n\n    case HANDLE_REMOVE:\n      return {\n        ...state,\n        todosWithUsers: [...state.todosWithUsers]\n          .filter(todo => todo.id !== action.payload),\n      };\n\n    case HANDLE_SORT:\n      switch (action.payload) {\n        case 'By user':\n          return {\n            ...state,\n            todosWithUsers: [...state.todosWithUsers]\n              .sort((a, b) => a.user.username.localeCompare(b.user.username)),\n          };\n\n        case 'By title':\n          return {\n            ...state,\n            todosWithUsers: [...state.todosWithUsers]\n              .sort((a, b) => a.title.localeCompare(b.title)),\n          };\n\n        case 'By status':\n          return {\n            ...state,\n            todosWithUsers: [...state.todosWithUsers]\n              .sort((a, b) => a.completed - b.completed),\n          };\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\n\nimport { reducer, initialState } from './reducer';\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\nimport store from './store/store';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}